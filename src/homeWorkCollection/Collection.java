package homeWorkCollection;

import java.util.*;

public class Collection {
    public static void main(String[] args) {
        List<String> name = new ArrayList<>(List.of("David", "Bill", "Katy", "David", "Patric", "Bill"));
        HashSet<String> name1 = new HashSet<>(name);//–ø–µ—Ä–≤—ã–π —Å–ø–æ—Å–æ–±
        System.out.println(name1);
        for (int i = 0; i < name.size(); i++) {//–≤–æ—Ä–æ–π —Å–ø–æ—Å–æ–±
            for (int j = i + 1; j < name.size(); j++) {
                if (name.get(i).equals(name.get(j))) {
                    name.remove(j);
                }
            }
        }
        System.out.println(name);

        //üìå 3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –¥—É–±–ª–∏–∫–∞—Ç—ã –≤ List
        //–ó–∞–¥–∞—á–∞: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –≤ List –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã.
        //–ò—â–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        List<Integer> numbers = List.of(4, 2, 2, 3, 1, 4, 5);
        HashSet<Integer> num = new HashSet<>(numbers);
        System.out.println(num);

        //–ó–∞–¥–∞—á–∞: –î–∞–Ω—ã –¥–≤–∞ Set<String>. –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤—Å–µ –æ–±—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã.
        Set<String> set1 = Set.of("–ê–ª–µ–∫—Å–µ–π", "–ú–∞—Ä–∏—è", "–î–º–∏—Ç—Ä–∏–π");
        Set<String> set2 = Set.of("–ú–∞—Ä–∏—è", "–°–µ—Ä–≥–µ–π", "–ê–ª–µ–∫—Å–µ–π");
        Set<String> setUnic = new HashSet<>(set1);
        setUnic.retainAll(set2);
        System.out.println(setUnic);

//        üìå 5. –ù–∞–π—Ç–∏ —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –¥–≤—É–º—è Set
//        –ó–∞–¥–∞—á–∞: –ù–∞–π—Ç–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–µ—Ä–≤–æ–≥–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤–æ –≤—Ç–æ—Ä–æ–º.
        Set<String> set = Set.of("–ê–ª–µ–∫—Å–µ–π", "–ú–∞—Ä–∏—è", "–î–º–∏—Ç—Ä–∏–π");
        Set<String> set4 = Set.of("–ú–∞—Ä–∏—è", "–°–µ—Ä–≥–µ–π");
        Set<String> set5 = new HashSet<>(set);
        set5.removeAll(set4);
        System.out.println(set5);

//        üìå 6. –ù–∞–π—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ (List ‚Üí Set)
//        –ó–∞–¥–∞—á–∞: –£ –Ω–∞—Å –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ List<String>. –ù—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–ª–æ–≤ –≤ –Ω–µ–º –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è.
        List<String> words = new ArrayList<>(List.of("–∫–æ—Ç", "—Å–æ–±–∞–∫–∞", "–∫–æ—Ç", "–ø—Ç–∏—Ü–∞", "—Ä—ã–±–∞", "—Ä—ã–±–∞"));
        List<String> word = new ArrayList<>(words);
        Set<String> wordUnicum = new HashSet<>(words);//1—Å–ø–æ—Å–æ–±
        System.out.println(wordUnicum);

        int size = 0;                         //–≤—Ç–æ—Ä–æ–π —Å–ø–æ—Å–æ–±
        for (int i = 0; i < word.size(); i++) {
            size++;
            for (int j = i + 1; j < word.size(); j++) {
                if (word.get(i).equals(word.get(j))) {
                    word.remove(j);
                }
            }
        }
        System.out.println(size + " (—É–Ω–∏–∫–∞–ª—å–Ω—ã–µ :" + word + " )");

//        üìå 7. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ List –ø–æ –¥–ª–∏–Ω–µ —Å—Ç—Ä–æ–∫
//        –ó–∞–¥–∞—á–∞: –î–∞–Ω List<String>. –ù—É–∂–Ω–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ –ø–æ –¥–ª–∏–Ω–µ —Å—Ç—Ä–æ–∫.
        List<String> wordFruit = new ArrayList<>(List.of("—è–±–ª–æ–∫–æ", "–∞–Ω–∞–Ω–∞—Å", "–∫–∏–≤–∏", "–±–∞–Ω–∞–Ω"));
        List<String> wordsFruits = new ArrayList<>(wordFruit);
        wordsFruits.sort(Comparator.comparing(String::length));
        System.out.println(wordsFruits);

//        üìå 8. –ù–∞–π—Ç–∏ –ø–µ—Ä–≤–æ–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ —Å–ª–æ–≤–æ –≤ List
//        –ó–∞–¥–∞—á–∞: –ù–∞–π—Ç–∏ –ø–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑.
        List<String> animal = List.of("–∫–æ—Ç", "—Å–æ–±–∞–∫–∞", "–∫–æ—Ç", "–ø—Ç–∏—Ü–∞", "—Ä—ã–±–∞", "—Ä—ã–±–∞");
        Set<String> animalSort = new HashSet<>(animal);
        List<String> animalFirst = new ArrayList<>(animalSort);
        System.out.println(animalFirst.getLast() + " –ø–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ,–≤—Å—Ç—Ä–µ—á–∞—é—â–∞—è—Å—è –ø–µ—Ä–≤—ã–π —Ä–∞–∑ ");


//        üìå 9. –†–∞–∑–¥–µ–ª–∏—Ç—å List<Integer> –Ω–∞ —á–µ—Ç–Ω—ã–µ –∏ –Ω–µ—á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞
//        –ó–∞–¥–∞—á–∞: –î–∞–Ω List<Integer>. –†–∞–∑–¥–µ–ª–∏—Ç—å –µ–≥–æ –Ω–∞ –¥–≤–∞ —Å–ø–∏—Å–∫–∞ ‚Äì —á–µ—Ç–Ω—ã–µ –∏ –Ω–µ—á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞.
        List<Integer> number = List.of(1, 2, 3, 4, 5, 6, 7, 8, 9);
        List<Integer> even = new ArrayList<>();
        List<Integer> odd = new ArrayList<>();
        for (int nu : number) {
            if (nu % 2 == 0) {
                even.add(nu);
            } else {
                odd.add(nu);
            }
        }
        System.out.println(even);
        System.out.println(odd);


    }
}
